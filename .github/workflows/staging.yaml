name: Internal Deployment

on:
  workflow_dispatch:
  push:
    tags:
    - v*-test

env:
  PACKAGE_OUTPUT: ${{ github.workspace }}\package

jobs:
  staging:
    environment: Staging
    runs-on: [self-hosted, windows]
    
    steps:
    - name: Git Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: .NET Setup
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
        
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0
      with:
        versionSpec: 5.x

    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0

    - name: Display GitVersion variables (without prefix)
      run: |
        echo "Major: ${{ env.major }}"
        echo "Minor: ${{ env.minor }}"
        echo "Patch: ${{ env.patch }}"
        echo "PreReleaseTag: ${{ env.preReleaseTag }}"
        echo "PreReleaseTagWithDash: ${{ env.preReleaseTagWithDash }}"
        echo "PreReleaseLabel: ${{ env.preReleaseLabel }}"
        echo "PreReleaseNumber: ${{ env.preReleaseNumber }}"
        echo "WeightedPreReleaseNumber: ${{ env.weightedPreReleaseNumber }}"
        echo "BuildMetaData: ${{ env.buildMetaData }}"
        echo "BuildMetaDataPadded: ${{ env.buildMetaDataPadded }}"
        echo "FullBuildMetaData: ${{ env.fullBuildMetaData }}"
        echo "MajorMinorPatch: ${{ env.majorMinorPatch }}"
        echo "SemVer: ${{ env.semVer }}"
        echo "LegacySemVer: ${{ env.legacySemVer }}"
        echo "LegacySemVerPadded: ${{ env.legacySemVerPadded }}"
        echo "AssemblySemVer: ${{ env.assemblySemVer }}"
        echo "AssemblySemFileVer: ${{ env.assemblySemFileVer }}"
        echo "FullSemVer: ${{ env.fullSemVer }}"
        echo "InformationalVersion: ${{ env.informationalVersion }}"
        echo "BranchName: ${{ env.branchName }}"
        echo "EscapedBranchName: ${{ env.escapedBranchName }}"
        echo "Sha: ${{ env.sha }}"
        echo "ShortSha: ${{ env.shortSha }}"
        echo "NuGetVersionV2: ${{ env.nuGetVersionV2 }}"
        echo "NuGetVersion: ${{ env.nuGetVersion }}"
        echo "NuGetPreReleaseTagV2: ${{ env.nuGetPreReleaseTagV2 }}"
        echo "NuGetPreReleaseTag: ${{ env.nuGetPreReleaseTag }}"
        echo "VersionSourceSha: ${{ env.versionSourceSha }}"
        echo "CommitsSinceVersionSource: ${{ env.commitsSinceVersionSource }}"
        echo "CommitsSinceVersionSourcePadded: ${{ env.commitsSinceVersionSourcePadded }}"
        echo "UncommittedChanges: ${{ env.uncommittedChanges }}"
        echo "CommitDate: ${{ env.commitDate }}"

    - name: Restoring
      run: dotnet restore --verbosity normal

    - name: Building (Release)
      run: dotnet build --configuration Release --no-restore --verbosity normal

    - name: Testing (Release)
      run: dotnet test --configuration Release --no-restore --no-build --verbosity normal

    - name: Packing (Release w/ Symbols)
      run: dotnet pack --configuration Release --no-restore --no-build --verbosity normal --include-symbols --output ${{ env.PACKAGE_OUTPUT }}

    - name: Pushing (Internal Repository)
      run: dotnet nuget push ${{ env.PACKAGE_OUTPUT }}\*.nupkg -k ${{ secrets.REPOSITORY_KEY }} -s ${{ secrets.REPOSITORY_SOURCE }}
