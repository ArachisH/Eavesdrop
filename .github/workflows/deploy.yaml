name: NuGet Package Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - develop-*
    tags:
      - v*-test

env:
  PACKAGE_OUTPUT: ${{ github.workspace }}\package

jobs:
  staging:
    environment: Staging
    runs-on: [self-hosted, windows]
    
    steps:
    - name: Git Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: .NET Setup
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
        
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0
      with:
        versionSpec: 5.x

    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0
      
    - name: Display GitVersion Variables
      run: |
        echo "Major: ${{ env.GitVersion_Major }}"
        echo "Minor: ${{ env.GitVersion_Minor }}"
        echo "Patch: ${{ env.GitVersion_Patch }}"
        echo "PreReleaseTag: ${{ env.GitVersion_PreReleaseTag }}"
        echo "PreReleaseTagWithDash: ${{ env.GitVersion_PreReleaseTagWithDash }}"
        echo "PreReleaseLabel: ${{ env.GitVersion_PreReleaseLabel }}"
        echo "PreReleaseNumber: ${{ env.GitVersion_PreReleaseNumber }}"
        echo "WeightedPreReleaseNumber: ${{ env.GitVersion_WeightedPreReleaseNumber }}"
        echo "BuildMetaData: ${{ env.GitVersion_BuildMetaData }}"
        echo "BuildMetaDataPadded: ${{ env.GitVersion_BuildMetaDataPadded }}"
        echo "FullBuildMetaData: ${{ env.GitVersion_FullBuildMetaData }}"
        echo "MajorMinorPatch: ${{ env.GitVersion_MajorMinorPatch }}"
        echo "SemVer: ${{ env.GitVersion_SemVer }}"
        echo "LegacySemVer: ${{ env.GitVersion_LegacySemVer }}"
        echo "LegacySemVerPadded: ${{ env.GitVersion_LegacySemVerPadded }}"
        echo "AssemblySemVer: ${{ env.GitVersion_AssemblySemVer }}"
        echo "AssemblySemFileVer: ${{ env.GitVersion_AssemblySemFileVer }}"
        echo "FullSemVer: ${{ env.GitVersion_FullSemVer }}"
        echo "InformationalVersion: ${{ env.GitVersion_InformationalVersion }}"
        echo "BranchName: ${{ env.GitVersion_BranchName }}"
        echo "EscapedBranchName: ${{ env.GitVersion_EscapedBranchName }}"
        echo "Sha: ${{ env.GitVersion_Sha }}"
        echo "ShortSha: ${{ env.GitVersion_ShortSha }}"
        echo "NuGetVersionV2: ${{ env.GitVersion_NuGetVersionV2 }}"
        echo "NuGetVersion: ${{ env.GitVersion_NuGetVersion }}"
        echo "NuGetPreReleaseTagV2: ${{ env.GitVersion_NuGetPreReleaseTagV2 }}"
        echo "NuGetPreReleaseTag: ${{ env.GitVersion_NuGetPreReleaseTag }}"
        echo "VersionSourceSha: ${{ env.GitVersion_VersionSourceSha }}"
        echo "CommitsSinceVersionSource: ${{ env.GitVersion_CommitsSinceVersionSource }}"
        echo "CommitsSinceVersionSourcePadded: ${{ env.GitVersion_CommitsSinceVersionSourcePadded }}"
        echo "UncommittedChanges: ${{ env.GitVersion_UncommittedChanges }}"
        echo "CommitDate: ${{ env.GitVersion_CommitDate }}"
      
    - name: Restoring
      run: dotnet restore --verbosity normal

    - name: Building (Release)
      run: dotnet build --configuration Release --no-restore --verbosity normal

    - name: Testing (Release)
      run: dotnet test --configuration Release --no-restore --no-build --verbosity normal

    - name: Packing (Release w/ Symbols)
      run: dotnet pack --configuration Release --no-restore --no-build --verbosity normal --include-symbols --output ${{ env.PACKAGE_OUTPUT }}

    - name: Pushing (Internal Repository)
      run: dotnet nuget push ${{ env.PACKAGE_OUTPUT }}\*.nupkg -k ${{ secrets.REPOSITORY_KEY }} -s ${{ secrets.REPOSITORY_SOURCE }}
